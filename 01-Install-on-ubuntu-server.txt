1- 
apt update
===================================================
2-
apt install nginx
===================================================
3-
apt update
apt upgrade
apt update
===================================================
4-
nginx -v

Output:
nginx version: nginx/1.18.0 (Ubuntu)
===================================================
5-
systemctl status nginx

Output:
    ● nginx.service - A high performance web server and a reverse proxy server
        Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)
        Active: active (running) since Mon 2024-02-12 13:37:53 UTC; 1min 40s ago
        ...
        ...
===================================================
6- Go in browser than link your website/IP/VPS,etc 
should see default page NginX
===================================================
7-
systemctl status nginx --no-pager

Output:
    ● nginx.service - A high performance web server and a reverse proxy server
     Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)
     Active: active (running) since Mon 2024-02-12 13:37:53 UTC; 10min ago
    ...
    ...
===================================================
8-
systemctl stop nginx
===================================================
9-
systemctl status nginx

Output:
    ○ nginx.service - A high performance web server and a reverse proxy server
     Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)
     Active: inactive (dead) since Mon 2024-02-12 13:50:17 UTC; 4s ago
     ...
     ...
===================================================
10-
systemctl start nginx
===================================================
11-
systemctl status nginx

Output:
    ● nginx.service - A high performance web server and a reverse proxy server
     Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)
     Active: active (running) since Mon 2024-02-12 13:52:47 UTC; 34s ago
     ...
     ... 
===================================================
12-
nginx -h

Output:
    nginx version: nginx/1.18.0 (Ubuntu)
Usage: nginx [-?hvVtTq] [-s signal] [-c filename] [-p prefix] [-g directives]

Options:
  -?,-h         : this help
  -v            : show version and exit
  -V            : show version and configure options then exit
  -t            : test configuration and exit
  -T            : test configuration, dump it and exit
  -q            : suppress non-error messages during configuration testing
  -s signal     : send signal to a master process: stop, quit, reopen, reload
  -p prefix     : set prefix path (default: /usr/share/nginx/)
  -c filename   : set configuration file (default: /etc/nginx/nginx.conf)
  -g directives : set global directives out of configuration file
===================================================
13-
nginx -t

Output:
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
===================================================
14-
nginx -T

Output:
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
    # configuration file /etc/nginx/nginx.conf:
    ...
    ...
===================================================
15-
cd /etc/nginx
Thank
ls

Output:
    conf.d        fastcgi_params  koi-win     modules-available  nginx.conf
    ...
    ...
===================================================
16-
more nginx.conf

Output:
    user www-data;
    worker_processes auto;
    ...
    ...
    --More--(40%)
===================================================
17- 
more /etc/nginx/sites-available/default

Output:
    ##
    # You should look at the following URL's in order to grasp a solid understanding
    # of Nginx configuration files in order to fully unleash the power of Nginx.
    # https://www.nginx.com/resources/wiki/start/
    # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
    # https://wiki.debian.org/Nginx/DirectoryStructure
    #
    # In most cases, administrators will remove this file from sites-enabled/ and
    # leave it as reference inside of sites-available where it will continue to be
    # updated by the nginx packaging team.
    #
    # This file will automatically load configuration files provided by other
    # applications, such as Drupal or Wordpress. These applications will be made
    # available underneath a path with that package name, such as /drupal8.
    #
    # Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
    ##

    # Default server configuration
    #
    server {
        ...
        ...
    }
    # Virtual Host configuration for example.com
    #
    # You can move that to a different file under sites-available/ and symlink that
    # to sites-enabled/ to enable it.
    ...
    ...
===================================================
18-
cd /var/log/nginx
than
ls

Output:
    access.log  error.log
===================================================
19-
head access.log

Output:
    ...
    [IP Your server] - - [12/Feb/2024:13:42:10 +0000] "GET / HTTP/1.1" 200 396 "-" "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:122.0) Gecko/20100101 Firefox/122.0"
    e.g. 
    123.10.10.143 - - [12/Feb/2024:13:42:10 +0000] "GET / HTTP/1.1" 200 396 "-" "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:122.0) Gecko/20100101 Firefox/122.0"
    ...
===================================================
20-
head error.log

Output:
    2024/02/12 13:27:30 [notice] 22894#22894: Signal process started
    2024/02/12 13:27:31 [notice] 22907#22907: Signal process started
    2024/02/12 13:27:32 [notice] 23001#23001: Signal process started
    ...
    ...
===================================================
21-
cd /var/www
than
ls

Output:
    html
===================================================
22-
find .

Output:
    .
    ./html
    ./html/index.nginx-debian.html
===================================================
23-
cd /etc/nginx
than
view nginx.conf

Output:
    user www-data;
    worker_processes auto;
    ...
    ...
===================================================
24-
:q

Press Enter key
===================================================
25-
cd sites-enabled/
than
ls

Output:
    default
===================================================
26-
cd ../conf.d/
than
ls

Output: should be shows anything!!
===================================================
27- Look at "009-Inside nginx conf.png" link
https://www.nginx.org/en/docs/dirindex.html
===================================================
28-
ls -ltr /etc/nginx/sites-enabled/

Output:
    total 0
    lrwxrwxrwx 1 root root 34 Feb 12 13:27 default -> /etc/nginx/sites-available/default
===================================================
29-
unlink /etc/nginx/sites-enabled/default
===================================================
30-
ls -ltr /etc/nginx/sites-available/

Output:
    total 4
    -rw-r--r-- 1 root root 2412 May 30  2023 default
===================================================
31-
vim /etc/nginx/conf.d/binaryville.conf
===================================================
32- Press "I" key for Insert mode
i

Output: in bottom screen:
-- INSERT --  
===================================================
33- write
server {
    listen 80;
    root /var/www/binaryville;
}
===================================================
34- Press "Esc" key
===================================================
35- write
:wq
than hit the Enter button
===================================================
36-
cat /etc/nginx/conf.d/binaryville.conf

Output:
    server {
        listen 80;
        root /var/www/binaryville;
    }
===================================================
37- Test the configuration
nginx -t

Output:
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
===================================================
38-
systemctl reload nginx
===================================================
39-
systemctl status nginx
===================================================
40-
mkdir -p /var/www/binaryville
===================================================
41- Let's put a test file in that directory
echo "My name is Sina LalehBakhsh from Earth." > /var/www/binaryville/index.html
===================================================
42- Go to your IP/Server/WebSite/  and check changes
===================================================
43-
vim /etc/nginx/conf.d/binaryville.conf
===================================================
44- Change content like this
server {
    listen 80 default_server;
    server_name binaryville.local www.binaryville.local;
    index index.html index.htm index.php;
    root /var/www/binaryville
}
===================================================
45- for more information
https://www.nginx.org/en/docs/http/request_processing.html
===================================================
46-
nginx -t

Output:
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
===================================================
47-
systemctl reload nginx
===================================================
48-
curl localhost

Output: content in index.html, for main is
    My name is Sina LalehBakhsh from Earth.
===================================================
Source these commands
    https://github.com/LinkedInLearning/learning-nginx-2492317/tree/d4220816275d6b732f1a750a5f384f6e11c68dcc/Ch01/01_08-add-files-to-the-root-directory
    OR
    https://github.com/AcronProjectGroup/learning-nginx-2492317/tree/main/Ch01/01_08-add-files-to-the-root-directory
===================================================
49-
cd /root
===================================================
50-
pwd

Output:
    /root
===================================================
51-
git clone git@github.com:LinkedInLearning/learning-nginx-2492317.git
OR
git clone https://github.com/LinkedInLearning/learning-nginx-2492317.git
===================================================
52-
ls learning-nginx-2492317/

Output:
    Binaryville_robot_website_LIL_107684.tgz  Ch00  Ch02  Ch04  Ch06             LICENSE  README.md
    Binaryville_robot_website_LIL_107684.zip  Ch01  Ch03  Ch05  CONTRIBUTING.md  NOTICE
===================================================
53-
tar xvf ~/learning-nginx-2492317/Binaryville_robot_website_LIL_107684.tgz --directory /var/www/binaryville/
===================================================
54-
ls /var/www/binaryville/

Output:
    403.html  50x.html  account  blog  checkout  humans.txt  index.html  README.rtf  shop
    404.html  about     assets   cart  contact   images      private     robots.txt  _style-guide
===================================================
Location Directive
    server {
        location [modifier] location_definition {
            ...
        location [modifier] location_definition {
            ...
        }
        }
    }
===================================================
===================================================
Location Modifiers
Modifier    Application to Location Definitions
--------    ------------------------------------
  None      The location definition is interpreted as a prefix for the URI
  =         The URI must be ab exact match to the location definition
  ~         The location definition is used as a case-sensitive regular expression
  ~*        The location definition is used as a case-insensitive regular expression
  ^~        If the longest prefix matches, then no regular expression are checked
===================================================
===================================================

See this file >> 016- Location Processing.png

===================================================
===================================================
55-
cd /root/learning-nginx-2492417/Ch02/02_03-configure-locations-part-2
===================================================
56-
pwd

Output:
    /root/learning-nginx-2492317/Ch02/02_03-configure-locations-part-2
===================================================
57-
view binaryville.conf
===================================================
58- write this and hit Enter
:set number
===================================================
59- write this and hit Enter
:8
===================================================
60- write this and hit Enter
:11
than
:q
===================================================
61-
cp binaryville.conf /etc/nginx/conf.d/
===================================================
62-
nginx -t

Output:
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
===================================================
63-
systemctl reload nginx
===================================================
64- go to your IP/Server/Websiter , should be shows index of /mages/
http://100.28.26.999/images/
===================================================
                    
                    NGINX Logs
                -------------------
    Log files record various operational details
    Access logs:
    - Time of the request
    - Result of the request
    - Client IP address
    - Client browser

    Error logs:
    - configuration errors
    - Service stops and starts
    - Service errors

default log file configuration is in the main configuration file, nginx.conf:
/etc/nginx/nginx.conf
http {
    ...
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    ...
}
===================================================
65-
cd /root/learning-nginx-2492317/Ch02/02_04-configure-logs
===================================================
66-
pwd

Output:
    /root/learning-nginx-2492317/Ch02/02_04-configure-logs
===================================================
67-
view binaryville.conf
===================================================
68-
:set number
than Enter
:8
than Enter
:21
than Enter
:q
than Enter
===================================================
69-
cp binaryville.conf /etc/nginx/conf.d/
===================================================
70-
ls /etc/nginx/conf.d/

Output:
    binaryville.conf
===================================================
71-
nginx -t

Output:
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
===================================================
72- 
systemctl reload nginx
===================================================
73-
cd /var/log/nginx
===================================================
74-
pwd

Output:
    /var/log/nginx
===================================================
75-
ls

Output:
    access.log                    binaryville.local.error.log          binaryville.local.images.error.log
    binaryville.local.access.log  binaryville.local.images.access.log  error.log
===================================================
76-
for i in {1..10}; do curl localhost > /dev/null; done

Output:
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
    100 29987  100 29987    0     0  4679k      0 --:--:-- --:--:-- --:--:-- 5856k
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
    ...
    ...
===================================================
77-
cat binaryville.local.access.log

Output:
    127.0.0.1 - - [13/Feb/2024:07:13:32 +0000] "GET / HTTP/1.1" 200 29987 "-" "curl/7.81.0"
    127.0.0.1 - - [13/Feb/2024:07:13:32 +0000] "GET / HTTP/1.1" 200 29987 "-" "curl/7.81.0"
    ...
    ...
===================================================
78-
for i in {1..10}; do curl localhost/images/ > /dev/null; done

Output:
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
    100  2338    0  2338    0     0   371k      0 --:--:-- --:--:-- --:--:--  456k
    ...
    ...
===================================================
79-
cat binaryville.local.images.access.log

Output:
    127.0.0.1 - - [13/Feb/2024:07:43:07 +0000] "GET /images/ HTTP/1.1" 200 2350 "-" "curl/7.81.0"
    127.0.0.1 - - [13/Feb/2024:07:43:07 +0000] "GET /images/ HTTP/1.1" 200 2350 "-" "curl/7.81.0"
    ...
    ...
===================================================

                Troubleshoot NGINX

Check for Configuration File Errors
nginx -t

Check NGINX Status and Reload the Configuration
systemctl status nginx
systemctl reload nginx    => without any output, which means OK

Check the Ports
if NGINX is up and running but you aren't seeing anything served, you'll want to check to make sure that the standard ports for web traffic are open, ports 80 and 443.
COMMANDS for checking ports:
    sudo lsof -i :80 -i :443 | grep nginx
    OR
    sudo apt install net-tools
    sudo netstat -plan | grep nginx
    OR
Tail the Logs
    tail -f /var/logs/nginx/*.log
===================================================
80-
sudo lsof -i :80 -i :443 | grep nginx

Output:
    nginx   1234     root    8u  IPv4  2342      0t0  TCP *:http (LISTEN)
    nginx   1234 www-data    8u  IPv4  2342      0t0  TCP *:http (LISTEN)
===================================================
81-
sudo apt install net-tools
than
sudo netstat -plan | grep nginx

Output:
    tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      2341/nginx: master  
    unix  3      [ ]         STREAM     CONNECTED     987621    2341/nginx: master   
    unix  3      [ ]         STREAM     CONNECTED     987621    2341/nginx: master  
===================================================

        Customize an NGINX Configuration
        -------------------------------------
        1. Remove the default NGINX configuration
        2. Add the following file below to the correct location on the server.
        3. Update the confguration to include a location for /complete that is only served on exact matches
        4. Update the location to use custom logging to a file named complete.access.log in the default logging locaiton for NGINX.
        5. Validate the custom location by browsing to the DNS for your server using the route /complete. For example, http://example.com/complete.
        6. Validate the custom logging by viewing the contents of the log file in /var/log/nginx/.

===================================================
82-
cd /etc/nginx/sites-enabled/
than:
pwd

Output:
    /etc/nginx/sites-enabled
===================================================
83-
ls -ltr

Output: (should be nothing) IF is like this
    default -> /etc/nginx/sites-available/default

So do this:
unlink default

again:
ls -ltr

Output: should be nothing
===================================================
84-
cd ../
===================================================
85-
cd conf.d/
===================================================
86-
vim complete.conf
===================================================
87-
hit I key
===================================================
88- Paste this in complete.conf
server {
    listen 80 default_server;
    listen [::]:80;

    ________ADD_THE_CUSTOM_LOCATION_HERE________ {

        # The `access_log` directive tells NGINX where to write logs for the
        # context containing the directive.
        # Check out the following URL for more details:
        # http://nginx.org/en/docs/http/ngx_http_log_module.html#access_log
        access_log ________ADD_THE_CUSTOM_LOG_FILE_HERE________;

        # The `return` directive tells NGINX to stop processing and return
        # the specified code along with an optional response.
        # Check out the following URL for more details:
        # http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#return
        return 200 '{"Message": "Your request is complete."}\n';

        # The `default_type` directive helps NGINX tell clients
        # how to interpret the content of a response.
        # Check out the following URL for more details:
        # http://nginx.org/en/docs/http/ngx_http_core_module.html#default_type
        default_type text/json;
    }
}
===================================================
89- Change this line
________ADD_THE_CUSTOM_LOCATION_HERE________ {

With:
location = /complete {
===================================================
90- Change this line
access_log ________ADD_THE_CUSTOM_LOG_FILE_HERE________;

with: (without insert mode you can use X key for delete characters)
access_log /var/log/nginx/complete.access.log;
===================================================
91-
Esc 
than
:w and Enter(return) = save and don't out
===================================================
92-
:wq
than
Enter (return)
===================================================
93-
nginx -t

Output:
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
===================================================
94-
systemctl reload nginx

If Output:
    nginx.service is not active, cannot reload.

than
systemctl start nginx

than
systemctl reload nginx
===================================================
95-
===================================================
96-
===================================================
97-
===================================================
98-
===================================================
99-
===================================================
100-
===================================================
101-
===================================================
102-
===================================================
103-
===================================================
104-
===================================================
105-
===================================================
106-
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================