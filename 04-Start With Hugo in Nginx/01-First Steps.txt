Installing Hugo

1- in Terminal
sudo apt install hugo
=======================================================================+++
2- in Terminal
hugo new site YOUR_SITE_NAME
=======================================================================+++
3- in Terminal
cd YOUR_SITE_NAME
=======================================================================+++
4- in Terminal
git clone https://github.com/vaga/hugo-theme-m10c themes/m10c
=======================================================================+++
5- Then add the following line to your config.toml file in your websiteâ€™s root folder
theme = "m10c"
=======================================================================+++
Configuring NGINX
6-
cd /etc/nginx/sites-available/
=======================================================================+++
7-
cp default YOUR_SITE_NAME
=======================================================================+++
8-
nano YOUR_SITE_NAME
=======================================================================+++
9-
server {
       listen 80;
       listen [::]:80;

       server_name YOUR_SITE_NAME.asd www.YOUR_SITE_NAME.asd;

       root /home/User/desktop; #Absolute path to where your hugo site is
       index index.html; # Hugo generates HTML

       location / {
               try_files $uri $uri/ =404;
       }
}

=======================================================================+++
10-
mv default /home/desktop/...
=======================================================================+++
11-
ln -s /etc/nginx/sites-available/YOUR_SITE_NAME /etc/nginx/sites-enabled/YOUR_SITE_NAME
=======================================================================+++
12- in /etc/nginx/conf.d
nano YOUR_SITE_NAME.conf
=======================================================================+++
13- in nano 
server {
        listen 80;
        root /home/user/...;
}
=======================================================================+++
14- in Terminal
systemctl reload nginx
systemctl enable nginx
nginx -t
=======================================================================+++
15-
hugo server -t m10c -D
=======================================================================+++
16- in address hugo site . Where http://mysite.com is your URL (defined in the DNS) and X.X.X.X is your IP address.
hugo server -b http://mysite.com -D --bind=X.X.X.X
=======================================================================+++
17-
nohup hugo server -b http://mysite.com -D --bind=X.X.X.X &
=======================================================================+++
18-
ps aux | grep 'hugo server'
=======================================================================+++
Example output might look like this:
    user      1234  0.0  0.1  123456  1234 pts/1    S    12:34   0:00 hugo server -b http://mysite.com -D --bind=X.X.X.X
    user      5678  0.0  0.0   23456   234 pts/1    S+   12:34   0:00 grep --color=auto hugo server
Here, 1234 is the PID of the Hugo server process.
Stop the Hugo server:
19-
kill 1234

If it does not stop:
kill -9 1234

=======================================================================+++
20-Open the main Nginx configuration file or the specific server block configuration file. The main configuration file is typically located at /etc/nginx/nginx.conf or in the /etc/nginx/sites-available/ directory.

server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name dddomain.xxx.com;
        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /home/dddomain/desktop/01-xxx/xxx/public; #Absolute path to where your hugo site is
        index index.html; # Hugo generates HTML

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }
}

=======================================================================+++
21-
sudo nginx -t

=======================================================================+++
22- Adjust Firewall Settings . If you have a firewall enabled, allow HTTP traffic:
sudo ufw allow 'Nginx Full'
=======================================================================+++
=======================================================================+++
=======================================================================+++
=======================================================================+++


